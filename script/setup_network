#!/usr/bin/env ruby


require 'facter'


$host_name = ARGV[ 0 ]
$mac_address = ARGV[ 1 ].downcase
$ipaddress = ARGV[ 2 ]
$netmask_address = ARGV[ 3 ]
$network_address = ARGV[ 4 ]
$broadcast_address = ARGV[ 5 ]
$gateway_address = ARGV[ 6 ]
$domain_name = ARGV[ 7 ]
$lucie_server = ARGV[ 8 ]
$lucie_server_ipaddress = ARGV[ 9 ]


$eth_id = nil


# parse udev persistent net rules.
File.open( '/tmp/target/etc/udev/rules.d/z25_persistent-net.rules', 'r' ) do | f |
  found = false
  f.each do | l |
    # skip comments and empty lines
    next if /^#|^\s+$/=~ l

    l.split( /,\s*/ ).each do | each |
      key, value = each.split( /=+/ )
      found = true if key == 'ATTRS{address}' and eval( value ) == $mac_address
      if found and key == 'NAME'
        $eth_id = eval( value )
        break
      end
    end
  end
  raise "#{ __FILE__ }: This should not happen!" unless found
end


File.open( '/tmp/target/etc/network/interfaces', 'w' ) do | file |
  file.puts( <<-EOF )
auto lo
iface lo inet loopback

auto #{ $eth_id }
iface #{ $eth_id } inet static
  address #{ $ipaddress }
  netmask #{ $netmask_address }
  network #{ $network_address }
  broadcast #{ $broadcast_address }
  gateway #{ $gateway_address }
EOF
end


File.open( '/tmp/target/etc/hostname', 'w' ) do | file |
  file.puts $host_name
end


File.open( '/tmp/target/etc/hosts', 'w' ) do | file |
  file.puts( <<-EOF )
127.0.0.1\tlocalhost.localdomain\tlocalhost
#{ Facter.value( 'ipaddress' ) }\t#{ $host_name }.#{ $domain_name }\t#{ $host_name }
#{ $lucie_server_ipaddress }\t#{ $lucie_server }.#{ $domain_name }\t#{ $lucie_server }

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
ff02::3 ip6-allhosts
  EOF
end
