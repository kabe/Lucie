#!/usr/bin/env ruby


require File.dirname(__FILE__) + '/../config/boot'

require 'builder_starter'
require 'lucie_daemon'
require 'lucied_blocker'
require 'optparse'


$start_lucie_daemon_only = false
$verbose = false


# HACK: Options copy/pasted from mongrel.rb in order to add custom options.
# (this section, therefore, may need to be manually updated when upgrading to a new Rails version)
ARGV.clone.options do | opts |
  opts.banner = 'usage: lucie [options]'

  opts.on( '-p', '--port=port', Integer, 'Runs Rails on the specified port.', 'Default: 3000' ) do
  end
  opts.on( '-b', '--binding=ip', String, 'Binds Rails to the specified ip.', 'Default: 0.0.0.0' ) do
  end
  opts.on( '-d', '--daemon', 'Make server run as a Daemon.' ) do
  end
  opts.on( '-l', '--lucied', 'Start lucie daemon only.' ) do
    $start_lucie_daemon_only = true
  end
  opts.on( '-e', '--environment=name', String,
           'Specifies the environment to run this server under (test/development/production).',
           'Default: production' ) do
  end
  opts.on( '-w', '--without-builders', 'Run without starting the installer builders.' ) do
    BuilderStarter.run_builders_at_startup = false
  end

  opts.separator ''

  opts.on( '-h', '--help', 'Show this help message.' ) do
    puts opts; exit
  end
  opts.on( '-V', '--verbose', 'Be verbose.' ) do
    $verbose = true
  end
  opts.parse!
end

system %(sudo -p '[lucied] password for %u: ' ruby -e "load './script/start_lucied'" #{ $verbose ? 'verbose' : '' } )
if $start_lucie_daemon_only
  exit 0
end


# Remove custom options so that they are not interpreted by 'commands/server'
ARGV.delete( '-w' )
ARGV.delete( '--without-builders' )
ARGV.delete( '--trace' )

# change default environment to production
if ( ARGV & [ '-e', '--environment' ] ).empty?
  ARGV << '-e' << 'production'
end

require 'commands/server'
