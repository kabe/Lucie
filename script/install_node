#!/usr/bin/env ruby


RAILS_ENV = 'installer'


require File.dirname( __FILE__ ) + '/../config/boot'
require RAILS_ROOT + '/lib/popen3/shell'
require 'optparse'


INSTALLER_OPTIONS = { :verbose => false }
INSTALLER_OPTIONS[ :node_name ] = ARGV.shift


ARGV.options do | opts |
  opts.banner = 'usage: node install <node-name>'

  opts.separator ''

  opts.on( '-t', '--trace', 'Print out exception stack traces' ) do
    INSTALLER_OPTIONS[ :verbose ] = true
  end

  opts.separator ''

  opts.on( '-h', '--help', 'Show this help message.' ) do
    puts opts
    exit 1
  end

  args = opts.parse!

  unless INSTALLER_OPTIONS[ :node_name ]
    STDERR.puts 'Node name is mandatory'
    STDERR.puts
    puts opts
    exit -1
  end

  # Node Name can only contain alphanumeric characters and numbers
  if INSTALLER_OPTIONS[ :node_name ].match /[^-_a-zA-Z0-9]/
    STDERR.puts "'#{ INSTALLER_OPTIONS[ :node_name ] }' is not a valid node name. Node name should only contain alphanumeric characters and numbers, dashes and underscores, and no whitespace."
    exit -1
  end

  labels = Dir[ "#{ RAILS_ROOT }/nodes/#{ INSTALLER_OPTIONS[ :node_name ] }" + '/install-*' ].collect do | each |
    /install-(\d+)\Z/=~ each
    $1.to_i
  end
  if labels.empty?
    label = 0
    INSTALLER_OPTIONS[ :log_file_name ] = "#{ RAILS_ROOT }/nodes/#{ INSTALLER_OPTIONS[ :node_name ] }/install-#{ label }/install.log"
  else
    label = labels.max + 1
  end
  install_log_dir = File.expand_path( "#{ RAILS_ROOT }/nodes/#{ INSTALLER_OPTIONS[ :node_name ] }/install-#{ label }" )
  FileUtils.mkdir_p install_log_dir
  INSTALLER_OPTIONS[ :log_file_name ] = File.join( install_log_dir, 'install.log' )
end


require RAILS_ROOT + '/config/environment'


unless node = Nodes.find( INSTALLER_OPTIONS[ :node_name ] )
  STDERR.puts "Node '#{ INSTALLER_OPTIONS[ :node_name ] }' is not added yet. Please add node with 'node add <node-name>' first."
  exit 1
end


Lucie::Log.verbose = INSTALLER_OPTIONS[ :verbose ]


Lucie::Log.info "Installing '#{ INSTALLER_OPTIONS[ :node_name ] }' (this may take a while)..."


begin
  require 'drb/drb'

  lucie_daemon = DRbObject.new_with_uri( LucieDaemon.uri )
  lucie_daemon.restart_puppet

  FileUtils.rm File.expand_path( '~/.ssh/known_hosts' ) rescue nil
  Installer.install node

  lucie_daemon.disable_node( node.name )
rescue Interrupt
  Lucie::Log.fatal 'Interrupted.'
  exit 1
rescue Exception => e
  begin
    Lucie::Log.fatal e.message
  rescue => logging_error
    STDERR.puts e.message
    STDERR.puts e.backtrace
    STDERR.puts "Attempt to log the above error failed with this:"
    STDERR.puts logging_error.message
    STDERR.puts logging_error.backtrace
  end

  if INSTALLER_OPTIONS[ :verbose ]
    raise
  else
    exit 1
  end
end


Lucie::Log.event "Installation for '#{ INSTALLER_OPTIONS[ :node_name ] }' finished."


### Local variables:
### mode: Ruby
### coding: utf-8
### indent-tabs-mode: nil
### End:
