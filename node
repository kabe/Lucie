#!/usr/bin/env ruby


load "#{ File.dirname( __FILE__ ) }/lib/lucie/version.rb"
require "fileutils"


def install_multi
  load "./script/node/install-multi"
end


def update
  load "./script/node/update"
end


def history
  load "./script/node/history"
end


def reset
  load "./script/node/reset"
end


def version
  puts <<-EOL
Lucie, version #{ Lucie::VERSION::STRING }
Copyright (C) 2009 Yasuhito TAKAMIYA
  EOL
end


def help
  command = ARGV.shift

  ARGV.clear << "--help"
  if command.nil?
    puts <<-EOL
usage: node <COMMAND> [OPTIONS ...] [ARGS ...]

Lucie node command-line tool, version #{ Lucie::VERSION::STRING }
Type 'node help <COMMAND>' for help on a specific command.
Type 'node --version' to see the version number.

Available commands:
  install        - installs a node
  install-multi  - installs nodes
  update         - updates the ldb repository and reconfigure
  history        - shows installation history
  reset          - disable installation services

Lucie is an Automatic Cluster Installer.
For additional information, see http://lucie.is.titech.ac.jp/
    EOL
  elsif method_for( command )
    self.__send__ method_for( command )
  else
    STDERR.puts "Type 'node help' for usage."
    exit -1
  end
end


def method_for command
  case command
  when "install", "inst"
    return :install_multi
  when "update", "up"
    return :update
  when "history", "hist"
    return :history
  when "reset"
    return :reset
  when "version", "-v", "--version"
    return :version
  when "help", "-h", "--help", "/?", "-?"
    return :help
  else
    return nil
  end
end


command = ARGV.shift
if method_for( command )
  FileUtils.cd File.dirname( __FILE__ ) do
    self.__send__ method_for( command )
  end
elsif command.nil?
  STDERR.puts "Type 'node --help' for usage."
  exit -1
else
  STDERR.puts "Unknown command: '#{ command }'"
  STDERR.puts "Type 'node --help' for usage."
  exit -1
end


### Local variables:
### mode: Ruby
### coding: utf-8
### indent-tabs-mode: nil
### End:
