#!/usr/bin/env ruby


# ENV[ 'RAILS_ENV' ] = 'production'


require File.dirname( __FILE__ ) + '/../config/boot'
require RAILS_ROOT + '/config/environment'
require 'optparse'


node_name = ARGV.shift
installer_name = nil
ip_address = nil
netmask_address = nil
gateway_address = nil
wol = false
trace = false


ARGV.options do |opts|
  opts.banner = 'usage: node enable <node-name> --installer <installer-name> -a <IP address> -n <netmask> -g <gateway>'

  opts.separator ''
  opts.on( '-i', '--installer installer name', String, 'The installer name for the installation' ) do | v |
    installer_name = v
  end

  opts.on( '-a', '--address address', String, 'IP address' ) do | v |
    ip_address = v
  end

  opts.on( '-n', '--netmask address', String, 'Netmask address' ) do | v |
    netmask_address = v
  end

  opts.on( '-g', '--gateway address', String, 'Gateway address' ) do | v |
    gateway_address = v
  end

  opts.on( '-w', '--wol', 'Remote power-on using wake on LAN' ) do
    wol = true
  end

  opts.on( '-t', '--trace', 'Print out exception stack traces' ) do
    trace = true
  end

  opts.separator ''

  opts.on( '-h', '--help', 'Show this help message.' ) do
    puts opts
    exit 1
  end

  args = opts.parse!

  unless node_name and installer_name
    STDERR.puts 'Node name and Installer name are mandatory'
    STDERR.puts
    puts opts
    exit -1
  end

  unless( ip_address and netmask_address and gateway_address )
    STDERR.puts 'IP, Netmask, and Gateway address are mandatory'
    STDERR.puts
    puts opts
    exit -1
  end

  # Node Name can only contain alphanumeric characters and numbers
  if node_name.match /[^-_a-zA-Z0-9]/
    STDERR.puts "'#{node_name}' is not a valid node name. Node name should only contain alphanumeric characters and numbers, dashes and underscores, and no whitespace."
    exit -1
  end


  unless Nodes.find( node_name )
    STDERR.puts "Node '#{ node_name }' is not added yet. Please add node with 'node add <node-name>' first."
    exit 1
  end


  unless Installers.find( installer_name )
    STDERR.puts "Installer '#{ installer_name }' is not added yet. Please add installer with 'installer add <installer-name>' first."
    exit 1
  end
end


puts "Setting up installer '#{ installer_name }' for node '#{ node_name }' (this may take a while)..."

begin
  node = Nodes.find( node_name )
  node.install_with installer_name

  Tftp.setup node_name, installer_name
  Nfs.setup installer_name
  Dhcp.setup installer_name, ip_address, netmask_address
  Puppet.setup Installers.find( installer_name ).local_checkout

  if wol
    WakeOnLan.wake node.mac_address
  end
rescue => e
  if trace
    raise
  else
    STDERR.puts "FAILED: #{e.message}"
    exit -1
  end
end


### Local variables:
### mode: Ruby
### coding: utf-8
### indent-tabs-mode: nil
### End:
