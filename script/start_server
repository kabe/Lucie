#!/usr/bin/env ruby


require File.dirname(__FILE__) + '/../config/boot'

require 'builder_starter'
require 'command_line'
require 'lucie_daemon'
require 'lucied_blocker'
require 'optparse'


# HACK: Options copy/pasted from mongrel.rb in order to add custom options.
# (this section, therefore, may need to be manually updated when upgrading to a new Rails version)
ARGV.clone.options do | opts |
  opts.on( '-p', '--port=port', Integer, 'Runs Rails on the specified port.', 'Default: 3000' ) {}
  opts.on( '-b', '--binding=ip', String, 'Binds Rails to the specified ip.', 'Default: 0.0.0.0' ) {}
  opts.on( '-d', '--daemon', 'Make server run as a Daemon.' ) {}
  opts.on( '-l', '--lucied', 'Start lucie daemon.' ) {
    load './script/start_lucied'
    exit 0
  }
  opts.on( '-e', '--environment=name', String,
           'Specifies the environment to run this server under (test/development/production).',
           'Default: production' ) {}
  opts.on( '-w', '--without-builders', 'Run without starting the installer builders.' ) {
    BuilderStarter.run_builders_at_startup = false
  }

  opts.separator ''

  opts.on( '-h', '--help', 'Show this help message.' ) { puts opts; exit }

  opts.parse!
end


system %(sudo ruby -e "load './script/start_lucied'" )


# Remove custom options so that they are not interpreted by 'commands/server'
ARGV.delete( '-w' )
ARGV.delete( '--without-builders' )
ARGV.delete( '--trace' )

# change default environment to production
if ( ARGV & [ '-e', '--environment' ] ).empty?
  ARGV << '-e' << 'production'
end

require 'commands/server'
