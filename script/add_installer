#!/usr/bin/env ruby


ENV[ 'RAILS_ENV' ] = 'production'


require File.dirname( __FILE__ ) + '/../config/boot'
require 'optparse'


installer_name = ARGV.shift
trace = false
scm_options = { :interactive => true }
start_builder = true


ARGV.options do |opts|
  opts.banner = 'usage: installer add <installer-name> --url <URL> [subversion options]'

  opts.separator ''
  opts.on("-u", "--url url", String,
          "The subversion url for the installer configuration (eg. svn://mysvn.org/config)") do |v|
    scm_options[:url] = v
  end
  opts.on("--username username", String, "Specify a username for source control") { |v| scm_options[:username] = v }
  opts.on("--password password", String, "Specify a password for source control") { |v| scm_options[:password] = v }
  opts.on( '-n', '--no-builder', 'Disable installer builder' ) do
    start_builder = false
  end
  opts.on( '-t', '--trace', 'Print out exception stack traces' ) do
    trace = true
  end

  opts.separator ''

  opts.on( '-h', '--help', 'Show this help message.' ) do
    puts opts
    exit 1
  end

  args = opts.parse!

  unless installer_name and scm_options[:url]
    STDERR.puts 'Installer name and url are mandatory'
    STDERR.puts
    puts opts
    exit -1
  end

  # Installer Name can only contain alphanumeric characters
  if installer_name.match /[^-_a-zA-Z0-9]/
    STDERR.puts "'#{installer_name}' is not a valid installer name. Installer name should only contain alphanumeric characters, dashes and underscores, and no whitespace."
    exit -1
  end
end


puts "Adding installer '#{installer_name}' (this may take a while)..."

begin
  require 'builder_starter'
  BuilderStarter.run_builders_at_startup = start_builder

  require RAILS_ROOT + '/config/environment'

  source_control = Subversion.new( scm_options )
  installer = Installer.new( installer_name, source_control )
  installers = Installers.load_all
  installers << installer

  if source_control.url =~ /^svn\+ssh\:\/\//
    puts "IMPORTANT!!! - It looks like you are connecting to your repository with an svn+ssh connection.  " +
      "For lucie to build this installer, you need to have set up authentication caching for ssh, see this article"
    puts "   http://subversion.tigris.org/faq.html#ssh-auth-cache"
    puts
  end

  lucie_daemon = LucieDaemon.server
  Lucie::Log.debug 'Setting up Puppet daemon'
  lucie_daemon.setup_puppet installer_name
rescue DRb::DRbConnError
  Lucie::Log.error 'Lucie daemon (lucied) is down.'
  exit -1
rescue => e
  if trace
    raise
  else
    STDERR.puts "FAILED: #{e.message}"
    exit -1
  end
end


puts "Installer '#{installer_name}' added."


### Local variables:
### mode: Ruby
### coding: utf-8
### indent-tabs-mode: nil
### End:
